////////////////////////////////////////////////////////////////////////////////
// Filename                                                           #hash-name <- This is to allow for quicker searching,
////////////////////////////////////////////////////////////////////////////////    and should be unique for each document.

// =============================================================================
// Heading
// =============================================================================

custom-element, .custom-element {

  // Use placeholders at the start

  @extend .font1, %clear-fix;

  // Linear styling that effects only this elements.
  // Unique properties go on it's own line.

  position:relative; // No spaces between the colon of the property and value
  display:block;

  // Related properties can go on the same line

  width:100%; height:500px;
  top:0; left:50%;

  // Use Mixins at the end of the element styling

  @include flex-container();
  @include transition(width 0 0.5 $ease-out-back);

  // Attributes

  &[data-theme="green"] {

    background-color:$green;

  }

  // Pseudo Classes

  &:before {

    @extend %pseudo;
    background-color:$black;

  }

  &:after {

    content:attr(data-counter);
    position:relative;
    display:block;

  }

  // Children should be ordered in the same way at the HTML markup.

  // Small Heading =============================================================

  // One-liners are ok!

  h2 { display:block; font-size:22px; font-weight:bold; }

  // Small Heading =============================================================

  // In some cases, it's more legibale to include the elemnent tag and id/class
  // together when refering to a particular item. No second-guessing element types.
  // The more granular approach can help avoid styling conflicts too.

  ul#list-element {

    li {

      &:nth-of-type(odd) {

        background-color:col($black, 0.1);

      }

      a {

        display:block;
        color:$blue;
        @include transition(color);

        // For smaller snippets, you can add browser specific inline styling.
        // Larger content should be placed at the root, similar to the media queries.

        @include browsers(ie, edge) { background-color:$green; }

        &:hover {

          color:$green;

        }

      }

    }

  }

  // Small Heading =============================================================

  // In special cases where at-root can be used to refer to parent elements

  @at-root body.disable-links & {

    ul#list-element li a {

      pointer-events:none;

    }

  }

  // Outputs: body.disable-links custom-element ul#list-element li a { ... }

  // ---------------------------------------------------------------------------
  // Media Queries
  // ---------------------------------------------------------------------------

  // Media Queries are nested at root & bottom of the element.

  @include break($large, '<') {

    ul#list-element li a {

      color:$green;

    }

  }

  @include break($medium, '<') {

    ul#list-element li a {

      color:$red;

    }

  }

}
